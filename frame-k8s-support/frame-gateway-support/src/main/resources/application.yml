rpc:
  server:
    authentication: http://localhost:8030
    provider: http://www.provider.com/
server:
  port: 8888
spring:
  application:
    name: gateway
  redis:
    database: 2
    port: 6379
    host: localhost
  cloud:
    gateway:
      routes:
        - id: dalaoyang
          uri: http://www.sina.com/
          predicates:
            - Path=/dalaoyang/**
        - id: juejin
          uri: http://www.baidu.com/
          predicates:
            - Path=/juejin/**
        - id: provider
          uri: ${rpc.server.provider}
          predicates:
            - Path=/provider/**
          filters:
            - StripPrefix=1 # 表示在转发时去掉userapi
            # 熔断降级配置
            - name: Hystrix
              args:
                name: default
                fallbackUri: forward:/defaultfallback
            # redis限流 ， filter名称必须是RequestRateLimiter
            - name: RequestRateLimiter
              args:
                # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
                key-resolver: '#{@remoteAddrKeyResolver}'
                # 每秒最大访问次数
                redis-rate-limiter.replenishRate: 20
                # 令牌桶最大容量
                redis-rate-limiter.burstCapacity: 20

# hystrix 信号量隔离，3秒后自动超时
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 3000
  shareSecurityContext: true
logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
feign:
  httpclient:
    enabled: true
  okhttp:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: FULL
frame:
  gateway:
    support: true
  white:
    support: true
  releaseServer:
    support: true
operating:
  environment: local
