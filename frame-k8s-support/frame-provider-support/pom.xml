<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>frame-k8s-support</artifactId>
        <groupId>com.lvmoney</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <version>0.0.2-SNAPSHOT</version>

    <artifactId>frame-provider-support</artifactId>
    <!--<properties>
        &lt;!&ndash;docker images&ndash;&gt;
        <docker.image.name>${project.artifactId}:${project.version}</docker.image.name>
        &lt;!&ndash;dockerFile 中 jar名称&ndash;&gt;
        <docker.file.name>${project.artifactId}-${project.version}</docker.file.name>
        &lt;!&ndash;docker tag&ndash;&gt;
        <docker.image.tag>192.168.1.181:5000/frame/${project.artifactId}:${project.version}</docker.image.tag>
        &lt;!&ndash;docker host&ndash;&gt;
        <docker.host>http://192.168.1.181:2375</docker.host>

    </properties>-->
    <dependencies>
        <dependency>
            <groupId>com.lvmoney</groupId>
            <artifactId>frame-common</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.lvmoney</groupId>
            <artifactId>frame-base-support</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <version>2.1.0.RELEASE</version>
        </dependency>
    </dependencies>


    <build>
            <plugins>
                <plugin>
                    <groupId>it.ozimov</groupId>
                    <artifactId>yaml-properties-maven-plugin</artifactId>
                    <version>1.1.3</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>src/main/resources/application.yml</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <!--这里写上main方法所在类的路径-->
                    <configuration>
                        <!--com.kismet.p2p.APPConfig即mainClass-->
                        <mainClass>com.lvmoney.provider.application.ProviderApplication</mainClass>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.4.3</version>
                    <executions>
                        <execution>
                            <id>build-image</id>     <!--定义一个执行命令的id-->
                            <phase>package</phase>   <!--绑定mvn的哪个命令-->
                            <goals>
                                <goal>build</goal>   <!--要执行的命令 -->
                            </goals>
                        </execution>
                        <execution>
                            <id>image-tag</id>
                            <phase>package</phase>
                            <goals>
                                <goal>tag</goal>      <!--tag命令，相当于docker的tag命令-->
                            </goals>
                            <configuration>
                                <image>${docker.image}</image>   <!--镜像名-->
                                <newName>${docker.tag}</newName>   <!--打的标签名-->
                            </configuration>
                        </execution>
                        <execution>
                            <id>package-push</id>
                            <phase>package</phase>
                            <goals>
                                <goal>push</goal>    <!--相当于docker的push命令-->
                            </goals>
                            <configuration>
                                <imageName>${docker.tag}</imageName>  <!--要push的镜像名-->
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <imageName>${docker.image}</imageName>
                        <baseImage>java</baseImage>
                        <!--<entryPoint>["java","-jar","/${project.build.finalName}.jar}"]</entryPoint>-->
                        <dockerDirectory>${project.basedir}/src/main/resources</dockerDirectory>
                        <dockerHost>${docker.registry}</dockerHost>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
            </plugins>

            <resources>
                <resource>
                    <directory>src/main/resources</directory>
                    <filtering>true</filtering>
                    <includes>
                        <include>**/**</include>
                    </includes>
                </resource>
                <resource>
                    <directory>src/main/java</directory>
                    <excludes>
                        <exclude>**/*.java</exclude>
                    </excludes>
                </resource>
            </resources>
    </build>
</project>