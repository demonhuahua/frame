spring:
  sleuth:
    sampler:
      percentage: 1.0
  zipkin:
    base-url: http://localhost:9411
  application:
    name: sc-customer
    cloud:
      consul:
        host: 127.0.0.1
        port: 8500
        discovery:
          register: true
          hostname: 127.0.0.1
          serviceName: ${spring.application.name}
          healthCheckPath: /actuator/health
          healthCheckInterval: 15s
          tags: urlprefix-/${spring.application.name}
          instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
feign:
  hystrix:
    enabled: true
ribbon:
  ReadTimeout:  30000
  ConnectTimeout:  15000
#    可根据不同的服务定制规则，在ribbon加上server的名称
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #配置规则 随机
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #配置规则 轮询
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #配置规则 重试
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #配置规则 响应时间权重
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #配置规则 最空闲连接策略
#    ConnectTimeout: 500 #请求连接超时时间
#    ReadTimeout: 1000 #请求处理的超时时间
#    OkToRetryOnAllOperations: true #对所有请求都进行重试
#    MaxAutoRetriesNextServer: 2 #切换实例的重试次数
#    MaxAutoRetries: 1 #对当前实例的重试次数

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000